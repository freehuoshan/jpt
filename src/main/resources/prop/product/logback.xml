<?xml version="1.0" encoding="UTF-8"?>
<!-- debug=ture,打印logback内部日志信息,实时查看logback运行状态 .默认false-->
<configuration debug="false" >
	<!-- ConsoleAppender把日志输出到控制台 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- RollingFileAppender滚动记录文件,先将日志记录到指定文件,当符合某个条件时,将日志记录到其他文件 -->
	<appender name="file"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>/jptlog/biz.log</file>
		<!-- FixedWindowRollingPolicy根据固定窗口算法重命名文件的滚动策略-->
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>/jptlog/biz.log-%i.log.zip
			</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>
		<!-- SizeBasedTriggeringPolicy查看当前活动文件的大小,
		 超过指定大小会告知RollingFileAppender触发当且活动文件滚动-->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>50MB</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} %-5level %logger{35} - %msg%n
			</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>debug</level>
		</filter>
	</appender>
	<logger name="com.jpt.log.BizLog" level="warn"
		additivity="true">
		<appender-ref ref="file" />
	</logger>
	<!-- 如果spring-config里面没有配置slf4j,就不会显示sql日志，logback只是slf4j的一个实现 -->
	<!-- <logger name="com.alibaba.druid" level="debug" additivity="false" /> -->
	<root level="warn">
		<appender-ref ref="STDOUT" />
	</root>

</configuration> 